service: notes-app-api

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs10.x
  stage: prod
  region: us-east-1

  # These environment variables are made available to our functions
  # under process.env.
  environment:
    tableName: notes
    stripeSecretKey: ${env:STRIPE_SECRET_KEY}

  # 'iamRoleStatements' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:410236045994:table/notes"

resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}

functions:
  billing:
    handler: src/notes/billing.handler
    events:
      - http:
          path: billing
          method: post
          cors: true
          authorizer: aws_iam
  create:
    handler: src/notes/create.handler
    events:
      - http:
          path: notes
          method: post
          cors: true
          authorizer: aws_iam
  update:
    handler: src/notes/update.handler
    events:
      - http:
          path: notes/{id}
          method: post
          cors: true
          authorizer: aws_iam
  get:
    handler: src/notes/get.handler
    events:
      - http:
          path: notes/{id}
          method: get
          cors: true
          authorizer: aws_iam
  delete:
    handler: src/notes/delete.handler
    events:
      - http:
          path: notes/{id}
          method: delete
          cors: true
          authorizer: aws_iam
  list:
    handler: src/notes/list.handler
    events:
      - http:
          path: notes/
          method: get
          cors: true
          authorizer: aws_iam
